<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Good Money BlackJack</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.17/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-blue-900 text-white font-sans">
  <div class="container mx-auto px-4">
    <h1 class="text-4xl font-bold mb-8">Good Money BlackJack</h1>
    <div id="game-board" class="flex flex-wrap mb-8">
      <div id="player-cards" class="w-full md:w-1/2 p-4">
        <h3 class="text-2xl font-bold mb-4">Player's Cards:</h3>
        <div class="flex flex-wrap"></div>
        <p id="player-value" class="mt-2 text-lg"></p>
      </div>
      <div id="dealer-cards" class="w-full md:w-1/2 p-4">
        <h3 class="text-2xl font-bold mb-4">Dealer's Cards:</h3>
        <div class="flex flex-wrap"></div>
        <p id="dealer-value" class="mt-2 text-lg"></p>
      </div>
    </div>
    <div id="buttons" class="mb-4">
      <button id="hit-button" class="bg-green-600 px-4 py-2 text-white font-bold mr-4">Hit</button>
      <button id="stand-button" class="bg-yellow-600 px-4 py-2 text-white font-bold mr-4">Stand</button>
      <button id="double-button" class="bg-red-600 px-4 py-2 text-white font-bold mr-4">Double Down</button>
      <button id="new-game-button" class="bg-gray-600 px-4 py-2 text-white font-bold">New Game</button>
    </div>
    <div id="message" class="text-3xl font-bold"></div>
  </div>

  <script>
    const playerCards = document.querySelector("#player-cards .flex");
    const dealerCards = document.querySelector("#dealer-cards .flex");
    const playerValue = document.getElementById("player-value");
    const dealerValue = document.getElementById("dealer-value");
    const hitButton = document.getElementById("hit-button");
    const standButton = document.getElementById("stand-button");
    const doubleButton = document.getElementById("double-button");
    const newGameButton = document.getElementById("new-game-button");
    const message = document.getElementById("message");

    function cardHTML(card) {
      return `<div class="text-center w-16 h-24 bg-red-500 border-2 border-white mr-2">${card.value}${card.suit}</div>`;
    }

    class Deck {
      constructor() {
        this.deck = [];
        this.reset();
        this.shuffle();
      }

      reset() {
        this.deck = [];
        const suits = ["♥️", "♠️", "♦️", "♣️"];
        const value = "2,3,4,5,6,7,8,9,10,J,Q,K,A";
        for (let suit of suits) {
          for (let v of value.split(",")) {
            this.deck.push({ value: v, suit: suit });
          }
        }
      }

      shuffle() {
        const { deck } = this;
        let m = deck.length, i;
        while (m) {
          i = Math.floor(Math.random() * m--);
          [deck[m], deck[i]] = [deck[i], deck[m]];
        }
        return this;
      }

      deal() {
        return this.deck.pop();
      }
    }

    class Player {
      constructor() {
        this.hand = [];
      }

      getHandValue() {
        let value = 0;
        let aces = 0;

        for (let card of this.hand) {
          let cardValue;
          if (card.value === "A") {
            cardValue = 11;
            aces += 1;
          } else if (isNaN(card.value)) {
            cardValue = 10;
          } else {
            cardValue = parseInt(card.value, 10);
          }
          value += cardValue;
        }

        while (value > 21 && aces > 0) {
          value -= 10;
          aces--;
        }

        return value;
      }
    }

    const deck = new Deck();
    const player = new Player();
    const dealer = new Player();

    function dealInitialCards() {
      player.hand.push(deck.deal());
      dealer.hand.push(deck.deal());
      player.hand.push(deck.deal());
      dealer.hand.push(deck.deal());
    }

    function renderCards() {
      playerCards.innerHTML = player.hand.map(cardHTML).join("");
      dealerCards.innerHTML = dealer.hand.map(cardHTML).join("");
      playerValue.textContent = "Value: " + player.getHandValue();
      dealerValue.textContent = "Value: " + dealer.getHandValue();
    }

    function endGame() {
      hitButton.disabled = true;
      standButton.disabled = true;
      doubleButton.disabled = true;
    }

    function newGame() {
      hitButton.disabled = false;
      standButton.disabled = false;
      doubleButton.disabled = false;
      player.hand = [];
      dealer.hand = [];
      message.textContent = "";
      deck.reset();
      deck.shuffle();
      dealInitialCards();
      renderCards();
    }

    function hit() {
      player.hand.push(deck.deal());
      renderCards();
      const playerValue = player.getHandValue();

      if (playerValue > 21) {
        message.textContent = "Busted! Dealer wins.";
        endGame();
      }
    }

    function stand() {
      const playerValue = player.getHandValue();
      let dealerValue = dealer.getHandValue();

      while (dealerValue < 17) {
        dealer.hand.push(deck.deal());
        dealerValue = dealer.getHandValue();
      }

      renderCards();

      if (dealerValue > 21) {
        message.textContent = "Dealer busted! Player wins.";
      } else if (dealerValue > playerValue) {
        message.textContent = "Dealer wins!";
      } else if (dealerValue === playerValue) {
        message.textContent = "Tie!";
      } else {
        message.textContent = "Player wins!";
        message.classList.add("text-red-600");
      }
      endGame();
    }

    function doubleDown() {
      hit();
      if (player.getHandValue() <= 21) {
        stand();
      }
    }

    hitButton.addEventListener("click", hit);
    standButton.addEventListener("click", stand);
    doubleButton.addEventListener("click", doubleDown);
    newGameButton.addEventListener("click", newGame);

    newGame();
  </script>
</body>
</html>
